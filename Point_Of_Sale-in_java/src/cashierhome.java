
import escpos.EscPos;
import escpos.EscPosConst;
import escpos.Style;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.PrintService;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import output.PrinterOutputStream;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author vedantmahajan
 */
public class cashierhome extends javax.swing.JFrame {

    /**
     * Creates new form cashierhome
     */
    ArrayList<mycart> cart = new ArrayList<>();

    int srno = 1, amount = 0, global_bid = -1;

    carttablemodel carttablemodel_obj;

    public cashierhome() {
        initComponents();

        setSize(1000, 1000);

        jPanel1.setVisible(false);

        lb_pid.setVisible(false);

        tf_net_total.setVisible(false);

        carttablemodel_obj = new carttablemodel();

        jTable1.setModel(carttablemodel_obj);
    }

    public class mycart {

        String pid, pname, price, qty, totalprice;

        int srno;

        mycart(int srno, String pid, String pname, String price, String qty, String totalprice) {
            this.srno = srno;

            this.pid = pid;

            this.pname = pname;

            this.price = price;

            this.qty = qty;

            this.totalprice = totalprice;

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tf_product_code = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lb_product_photo = new javax.swing.JLabel();
        lb_product_name = new javax.swing.JLabel();
        lb_product_category = new javax.swing.JLabel();
        lb_product_price = new javax.swing.JLabel();
        lb_pid = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tf_quantity = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        tf_net_total = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lb_amount = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tf_mobile = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setText("ENTER PRODUCT CODE :");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(40, 36, 170, 30);
        getContentPane().add(tf_product_code);
        tf_product_code.setBounds(240, 40, 200, 26);

        jButton1.setText("SHOW");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(500, 40, 82, 29);

        jPanel1.setLayout(null);

        lb_product_photo.setText("jLabel2");
        jPanel1.add(lb_product_photo);
        lb_product_photo.setBounds(30, 30, 170, 160);

        lb_product_name.setText("jLabel3");
        jPanel1.add(lb_product_name);
        lb_product_name.setBounds(260, 40, 180, 16);

        lb_product_category.setText("jLabel4");
        jPanel1.add(lb_product_category);
        lb_product_category.setBounds(260, 100, 180, 16);

        lb_product_price.setText("jLabel5");
        jPanel1.add(lb_product_price);
        lb_product_price.setBounds(260, 160, 200, 16);

        lb_pid.setText("jLabel2");
        jPanel1.add(lb_pid);
        lb_pid.setBounds(420, 50, 45, 16);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(40, 110, 550, 220);

        jLabel6.setText("ENTER QUANTITY : ");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(60, 370, 160, 16);
        getContentPane().add(tf_quantity);
        tf_quantity.setBounds(270, 370, 190, 26);

        jButton2.setText("ADD TO CART");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(590, 370, 160, 29);

        jLabel7.setText("NET TOTAL :");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(630, 450, 80, 16);

        tf_net_total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_net_totalActionPerformed(evt);
            }
        });
        getContentPane().add(tf_net_total);
        tf_net_total.setBounds(270, 410, 190, 26);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 480, 760, 270);
        getContentPane().add(lb_amount);
        lb_amount.setBounds(720, 450, 60, 0);

        jButton3.setText("DELETE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(690, 750, 90, 29);

        jLabel2.setText("MOBILE NUMBER : ");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 760, 114, 16);

        tf_mobile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_mobileActionPerformed(evt);
            }
        });
        getContentPane().add(tf_mobile);
        tf_mobile.setBounds(140, 750, 200, 40);

        jButton4.setText("CheckOUT");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(350, 760, 110, 29);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tf_net_totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_net_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_net_totalActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        int quantity = Integer.parseInt(tf_quantity.getText());

        int total = (quantity * Integer.parseInt(lb_product_price.getText()));

        String Total = Integer.toString(total);

        tf_net_total.setText(Total);

        cart.add(new mycart(srno, lb_pid.getText(), lb_product_name.getText(), lb_product_price.getText(), tf_quantity.getText(), tf_net_total.getText()));

        srno++;

        amount = amount + total;

        String Amount = Integer.toString(amount);

        lb_amount.setText(Amount);

        carttablemodel_obj.fireTableDataChanged();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        ResultSet resultset_obj = DBLoader.executeQuery("select * from product where Barcode='" + tf_product_code.getText() + "'");

        try {
            if (resultset_obj.next()) {
                jPanel1.setVisible(true);

                String pid = Integer.toString(resultset_obj.getInt("PID"));

                lb_pid.setText(pid);

                lb_product_name.setText(resultset_obj.getString("Name"));

                lb_product_category.setText(resultset_obj.getString("Category"));

                lb_product_price.setText(resultset_obj.getString("Price"));

                String photopath = resultset_obj.getString("Photo");

                lb_product_photo.setIcon(new ImageIcon(photopath));

            }
        } catch (SQLException ex) {
            Logger.getLogger(cashierhome.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        int rowselected = jTable1.getSelectedRow();

        if (rowselected < 0) {
            JOptionPane.showMessageDialog(rootPane, "No Row Selected !");
        } else {
            int serialnumber = cart.get(rowselected).srno;

//            try 
            {
                cart.remove(serialnumber - 1);

//                resultset_obj.next();
//                
//                resultset_obj.deleteRow();
            }
//            catch (SQLException ex) 
//            {
//                Logger.getLogger(category.class.getName()).log(Level.SEVERE, null, ex);
//            }

            carttablemodel_obj.fireTableDataChanged();
//            
//            getcategory();
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void tf_mobileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_mobileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_mobileActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
        LocalDateTime now = LocalDateTime.now();
        System.out.println(dtf.format(now));

        String date = dtf.format(now);

        String mobile_number = tf_mobile.getText();

        String grand_total = lb_amount.getText();

        ResultSet resultset_obj1 = DBLoader.executeQuery("select * from bill");

        try {
            resultset_obj1.moveToInsertRow();

            resultset_obj1.updateString("Date_of_bill", date);

            resultset_obj1.updateString("Mobile", mobile_number);

            resultset_obj1.updateString("Grand_total", grand_total);
            resultset_obj1.insertRow();
        } catch (SQLException ex) {
            Logger.getLogger(cashierhome.class.getName()).log(Level.SEVERE, null, ex);
        }

        ResultSet resultset_obj2 = DBLoader.executeQuery("select max(BID) BID from bill");

        try {
            if (resultset_obj2.next()) {
                int j = 0;

                global_bid = resultset_obj2.getInt("BID");

                for (int i = 0; i < cart.size(); i++) {
                    mycart mycart_object = cart.get(i);
                    ResultSet resultset_obj3 = DBLoader.executeQuery("select * from bill_details");

                    resultset_obj3.moveToInsertRow();

                    resultset_obj3.updateInt("bid", global_bid);

                    resultset_obj3.updateString("pid", mycart_object.pid);

                    resultset_obj3.updateString("pname", mycart_object.pname);

                    resultset_obj3.updateString("price", mycart_object.price);

                    resultset_obj3.updateString("qty", mycart_object.qty);

                    resultset_obj3.updateString("totalprice", mycart_object.totalprice);
                    resultset_obj3.insertRow();

                }
                JOptionPane.showMessageDialog(rootPane, "order placed, collect your bill..");
                getbillprited();
            }
        } catch (SQLException ex) {
            Logger.getLogger(cashierhome.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButton4ActionPerformed

    class carttablemodel extends AbstractTableModel {

        @Override
        public int getRowCount() {
            return cart.size();
        }

        @Override
        public int getColumnCount() {
            return 6;
        }

        @Override
        public Object getValueAt(int i, int j) {
            mycart mycart_object = cart.get(i);

            if (j == 0) {
                return mycart_object.srno;
            } else if (j == 1) {
                return mycart_object.pid;
            } else if (j == 2) {
                return mycart_object.pname;
            } else if (j == 3) {
                return mycart_object.price;
            } else if (j == 4) {
                return mycart_object.qty;
            } else if (j == 5) {
                return mycart_object.totalprice;
            } else {
                return null;

            }

        }

        @Override
        public String getColumnName(int j) {
            String col[] = {"SRNO", "PID", "Name", "Price", "Quantity", "Total Price"};

            return col[j];
        }

    }

    void getbillprited() {

        try {

            PrintService printService = PrinterOutputStream.getPrintServiceByName("THERMAL Receipt Printer");
            PrinterOutputStream printerOutputStream = new PrinterOutputStream(printService);
            EscPos escpos = new EscPos(printerOutputStream);
            Style header = new Style()
                    .setFontSize(Style.FontSize._2, Style.FontSize._2)
                    .setJustification(EscPosConst.Justification.Center)
                    .setBold(true)
                    .setColorMode(Style.ColorMode.WhiteOnBlack);

            Style address = new Style()
                    .setFontName(Style.FontName.Font_A_Default)
                    .setFontSize(Style.FontSize._1, Style.FontSize._1)
                    .setJustification(EscPosConst.Justification.Center);
            escpos.writeLF(header, "Point of Sale");
            escpos.writeLF(address, "SCO-108, Ranjeet Avenue");
            escpos.writeLF(address, "+918725983606");
            escpos.writeLF(address, "GSTIN : 23AADGS334SDZDT");
            escpos.writeLF(address, "Vat No : 94832848349");
            escpos.writeLF(address, new Date() + "");
//            escpos.writeLF(address, "Table No. 120");
            escpos.writeLF(address, "    ");
            escpos.writeLF(address, "    ");

//            QRCode qrCode = new QRCode()
//                    .setSize(5)
//                    .setModel(QRCode.QRModel._2)
//                    .setJustification(EscPosConst.Justification.Center);
//
//            escpos.write(qrCode, "QR Code");
//
//            escpos.writeLF(address, "    ");
//            BarCode barcode = new BarCode();
//            barcode.setJustification(EscPosConst.Justification.Center);
//            barcode.setHRIPosition(BarCode.BarCodeHRIPosition.BelowBarCode);
//            escpos.write(barcode, tfbarcode.getText());
//            GraphicsImageWrapper imageWrapper = new GraphicsImageWrapper();
//            imageWrapper.setJustification(EscPosConst.Justification.Center);
//            
//            BitonalThreshold bod = new BitonalThreshold();
//            BufferedImage bimg = ImageIO.read(new File("src/images/goku.png"));
//            EscPosImage escPos = new EscPosImage(bimg, bod);
//            escpos.write(imageWrapper, escPos);
//
////            BitonalThreshold bt = new BitonalThreshold();
            Style lineStyle = new Style()
                    .setFontSize(Style.FontSize._1, Style.FontSize._1)
                    .setJustification(EscPosConst.Justification.Center);

            Style rightText = new Style()
                    .setFontSize(Style.FontSize._1, Style.FontSize._1)
                    .setJustification(EscPosConst.Justification.Right);

            Style leftText = new Style()
                    .setFontSize(Style.FontSize._1, Style.FontSize._1)
                    .setJustification(EscPosConst.Justification.Left_Default)
                    .resetLineSpacing();
            Style justifiedText = new Style()
                    .setFontSize(Style.FontSize._1, Style.FontSize._1)
                    .setJustification(EscPosConst.Justification.Center);

            escpos.writeLF(rightText, "Bill No : " + global_bid);
            escpos.writeLF(leftText, "Cashier: casher1");

            escpos.writeLF(lineStyle, "----------------------------------------");
            escpos.writeLF("Item                Rate    Qty    Price");
            System.out.println("Item                Rate    Qty    Price");
            escpos.writeLF(lineStyle, "----------------------------------------");
            for (int i = 0; i < cart.size(); i++) {

                String name = cart.get(i).pname;

                if (name.length() == 6) {
                    name = name + "              ";
                } else if (name.length() == 7) {
                    name = name + "             ";
                } else if (name.length() == 8) {

                    name = name + "            ";

                } else if (name.length() == 9) {
                    name = name + "           ";
                } else if (name.length() == 10) {
                    name = name + "          ";
                } else if (name.length() == 11) {
                    name = name + "         ";
                } else if (name.length() == 12) {
                    name = name + "        ";
                } else if (name.length() == 13) {
                    name = name + "      ";
                } else if (name.length() == 14) {
                    name = name + "      ";
                } else if (name.length() == 15) {
                    name = name + "     ";
                } else if (name.length() == 16) {
                    name = name + "    ";
                } else if (name.length() == 17) {
                    name = name + "   ";
                } else if (name.length() == 18) {
                    name = name + "  ";
                } else {
                    name = name + " ";
                }

                escpos.write(leftText, name + "" + cart.get(i) + "    " + cart.get(i).qty + "    " + cart.get(i).totalprice);

                escpos.writeLF("");

                System.out.print(cart.get(i).pname);
                System.out.print(cart.get(i).price + "    " + cart.get(i).qty + "    " + cart.get(i).totalprice);
                System.out.println("");
            }
            escpos.writeLF(lineStyle, "----------------------------------------");
            escpos.write(justifiedText, "Net Payable:  " + lb_amount.getText());

//            Style justifiedText = new Style()
//                    .setFontSize(Style.FontSize._1, Style.FontSize._1)
//                    .setJustification(EscPosConst.Justification.Left_Default);
            escpos.feed(5);
            escpos.cut(EscPos.CutMode.PART);
            escpos.close();

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cashierhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cashierhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cashierhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cashierhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cashierhome().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lb_amount;
    private javax.swing.JLabel lb_pid;
    private javax.swing.JLabel lb_product_category;
    private javax.swing.JLabel lb_product_name;
    private javax.swing.JLabel lb_product_photo;
    private javax.swing.JLabel lb_product_price;
    private javax.swing.JTextField tf_mobile;
    private javax.swing.JTextField tf_net_total;
    private javax.swing.JTextField tf_product_code;
    private javax.swing.JTextField tf_quantity;
    // End of variables declaration//GEN-END:variables
}
