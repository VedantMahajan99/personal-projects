
import java.awt.Component;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author vedantmahajan
 */
public class category extends javax.swing.JFrame {

    /**
     * Creates new form category
     */
    
    
    ArrayList<categoryinfo> categoryList = new ArrayList<>();
    
    mytablemodel mytablemodel_obj;
    
    public category() {
        initComponents();
        
        lb_path.setVisible(false);

        mytablemodel_obj = new mytablemodel();
        
        jTable1.setModel(mytablemodel_obj);
        
        getcategory();
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tf_categoryname = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_description = new javax.swing.JTextArea();
        lb_icon = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        lb_path = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setText("CATEGORY NAME :");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(40, 30, 120, 16);

        jLabel2.setText("CATEGORY DESCRIPTION");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(40, 130, 156, 16);

        jLabel3.setText("PHOTO");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(40, 310, 45, 16);

        tf_categoryname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_categorynameActionPerformed(evt);
            }
        });
        getContentPane().add(tf_categoryname);
        tf_categoryname.setBounds(240, 30, 220, 26);

        ta_description.setColumns(20);
        ta_description.setRows(5);
        jScrollPane1.setViewportView(ta_description);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(240, 100, 230, 140);

        lb_icon.setText("jLabel4");
        getContentPane().add(lb_icon);
        lb_icon.setBounds(200, 290, 230, 120);

        jButton1.setText("BROWSE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(550, 340, 94, 29);

        jButton2.setText("ADD");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(330, 470, 75, 29);

        lb_path.setText("jLabel5");
        getContentPane().add(lb_path);
        lb_path.setBounds(30, 440, 670, 16);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(750, 60, 370, 390);

        jButton3.setText("DELETE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(890, 470, 90, 29);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        JFileChooser jfc = new JFileChooser();
        
        int ans = jfc.showOpenDialog(this);
        
        if(ans == JFileChooser.APPROVE_OPTION )
        {
            File file_obj = jfc.getSelectedFile();
        
            lb_icon.setIcon(new ImageIcon(file_obj.getPath()));

            lb_path.setText(file_obj.getPath());

            lb_path.setVisible(true);
        }
       else
        {
            JOptionPane.showMessageDialog(rootPane, "you need to select a file to move further");
        }
        
        
     
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tf_categorynameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_categorynameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_categorynameActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       
        if((tf_categoryname.getText() == null)  ||  (ta_description.getText() == null))
        {
            JOptionPane.showMessageDialog(rootPane, "ALL FIELDS ARE NECESSARY !");
        }
        else
        {
            String newfilename = new Date().getTime() + ".jpg";
            
            File file_obj1 = new File(lb_path.getText());  //doubt 1
            
            new savefileinfolder(file_obj1, newfilename);
            
            try
            {
            ResultSet resultset_obj = DBLoader.executeQuery("select * from category where category_name='"+tf_categoryname.getText()+"'");
            
            if(resultset_obj.next())
            {
                
                JOptionPane.showMessageDialog(rootPane, "Category already exists");
                
            }
            else
            {
                
                resultset_obj.moveToInsertRow();
                
                resultset_obj.updateString("category_name", tf_categoryname.getText());
                
                resultset_obj.updateString("category_description", ta_description.getText());
                
                resultset_obj.updateString("category_photo", "src/pics/"+newfilename);
                
                resultset_obj.insertRow();
                
                JOptionPane.showMessageDialog(rootPane, "DATA ENTRY SUCCESSFUL !");
                
            }
            
            categoryList.clear();
            
            getcategory();
            
            
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
            
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       
        int rowselected = jTable1.getSelectedRow();
        
        if(rowselected < 0)
        {
            JOptionPane.showMessageDialog(rootPane, "No Row Selected !");
        }
        else
        {
            String nameselected = categoryList.get(rowselected).categoryname;
            
            ResultSet resultset_obj = DBLoader.executeQuery("select * from category where category_name='"+ nameselected +"'");
            
            try 
            {
                resultset_obj.next();
                
                resultset_obj.deleteRow();
            } 
            catch (SQLException ex) 
            {
                Logger.getLogger(category.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            categoryList.clear();
            
            getcategory();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    
    public void getcategory()
    {
        
         
         ResultSet resultset_obj = DBLoader.executeQuery("select * from category");
         
        try {
            while(resultset_obj.next())
            {
              
                categoryList.add( new categoryinfo ( resultset_obj.getString("category_name") , resultset_obj.getString("category_description") , resultset_obj.getString("category_photo") ) );
                
                jTable1.getColumnModel().getColumn(2).setCellRenderer(new ImageRenderer());
                
                jTable1.setRowHeight(100);
                
                mytablemodel_obj.fireTableDataChanged();
                
                
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(category.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
      class mytablemodel extends AbstractTableModel
    { 
          
        @Override
        public int getRowCount()
        {
            return categoryList.size();
        }
        
        @Override
        public int getColumnCount()
        {
            return 3;
        }
        
        @Override
        public Object getValueAt(int i, int j)
        {
            categoryinfo catgoryinfo_object = categoryList.get(i);
             
             if(j==0)
                 return catgoryinfo_object.categoryname;
             
             else if(j==1)
                 return catgoryinfo_object.categorydesc;
             
             else if(j==2)
                 return catgoryinfo_object.categoryphoto;
             
             return null;
             
        }
        
        @Override
        public String getColumnName(int j)
        {
           String col[]={"Name","Description","Photo"}; 
           
           return col[j];
        }
        
        
    }    
    
      
       class ImageRenderer extends DefaultTableCellRenderer {

        JLabel lbl = new JLabel();

        ImageIcon icon = new ImageIcon("");
        
        BufferedImage bufferedImage, newimage;

        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected,boolean hasFocus, int row, int column) {
//        
//            
            icon = new ImageIcon(categoryList.get(row).categoryphoto); //doubt
            
            Image image_object = icon.getImage();
            
            Image newimg = image_object.getScaledInstance(80, 70, Image.SCALE_SMOOTH);

            lbl.setIcon(new ImageIcon(newimg));
            
            return lbl;
        }
    }
       
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new category().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lb_icon;
    private javax.swing.JLabel lb_path;
    private javax.swing.JTextArea ta_description;
    private javax.swing.JTextField tf_categoryname;
    // End of variables declaration//GEN-END:variables
}
